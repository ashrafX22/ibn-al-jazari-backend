services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ibn-al-jazari-db?schema=public
      - NODE_ENV=deploy
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - db
    restart: always

  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ibn-al-jazari-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

    # services:
    #   backend:
    #     build:
    #       context: ./backend
    #       dockerfile: Dockerfile
    #     ports:
    #       - "3000:3000"
    #     environment:
    #       - PORT=3000
    #       - DATABASE_URL=postgresql://postgres:postgres@db:5432/ibn-al-gazari-db?schema=public
    #       - NODE_ENV=deploy
    #     volumes:
    #       - ./backend:/usr/src/app
    #     depends_on:
    #       - db
    #     restart: always
    #     command: >
    #       sh -c "npx prisma migrate deploy &&
    #              npm run start:prod"

    #   db:
    #     image: postgres:13
    #     restart: always
    #     ports:
    #       - "5433:5432"
    #     environment:
    #       - POSTGRES_USER=postgres
    #       - POSTGRES_PASSWORD=postgres
    #       - POSTGRES_DB=ibn-al-gazari-db
    #     volumes:
    #       - postgres-data:/var/lib/postgresql/data
    #     healthcheck:
    #       test: [ "CMD-SHELL", "pg_isready -U postgres" ]
    #       interval: 10s
    #       timeout: 5s
    #       retries: 5

    # volumes:
    #   postgres-data:
